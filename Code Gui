local repo = "https://raw.githubusercontent.com/deividcomsono/Obsidian/main/"

local Library
local ThemeManager
local SaveManager

local success, err = pcall(function()
    local libCode = game:HttpGet(repo .. "Library.lua")
    Library = loadstring(libCode)()

    local themeCode = game:HttpGet(repo .. "addons/ThemeManager.lua")
    ThemeManager = loadstring(themeCode)()

    local saveCode = game:HttpGet(repo .. "addons/SaveManager.lua")
    SaveManager = loadstring(saveCode)()
end)

if not success then
    warn("Failed to load one or more libraries:", err)
    return
end

local Options = Library.Options
local Toggles = Library.Toggles

Library.ForceCheckbox = false
Library.ShowToggleFrameInKeybinds = true

local Window = Library:CreateWindow({
    Title = "BLACKSPIDER",
    Footer = "version: example",
    Icon = 131071604680337,
    NotifySide = "Right",
    ShowCustomCursor = true,
})

local Tabs = {
    Main = Window:AddTab("Main", "user"),
    Shop = Window:AddTab("Shop", "shopping_cart"),
    ["UI Settings"] = Window:AddTab("UI Settings", "settings"),
}

local LeftGroupBox = Tabs.Main:AddLeftGroupbox("Groupbox", "boxes")

LeftGroupBox:AddToggle("MyToggle", {
    Text = "นี่คือปุ่มสลับ",
    Tooltip = "นี่คือคำแนะนำ",
    Default = true,
    Visible = true,
    Risky = false,
    Callback = function(Value)
    end,
})

Toggles.MyToggle:OnChanged(function()
end)

Toggles.MyToggle:SetValue(false)

Library:OnUnload(function()
end)

---
local ShopGroupBox = Tabs.Shop:AddLeftGroupbox("Seed Shop Event", "box")
local GearShopGroupBox = Tabs.Shop:AddLeftGroupbox("Gear Shop Event", "box")
local EggShopGroupBox = Tabs.Shop:AddLeftGroupbox("Egg Shop Event", "egg")

local autoBuyLowLevelSeedsCoroutine = nil
local autoBuyHighLevelSeedsCoroutine = nil
local autoBuyAllSeedsCoroutine = nil
local autoBuySelectedSeedCoroutine = nil
local autoBuySelectedGearCoroutine = nil
local autoBuyAllGearCoroutine = nil
local autoBuySpecificEggTypeCoroutine = nil
local autoBuyAllEggsInShopCoroutine = nil

local allSeedsList = {
    "Carrot", "Strawberry", "Blueberry", "Tomato", "Cauliflower",
    "Watermelon", "Green Apple", "Avocado", "Banana",
    "Pineapple", "Kiwi", "Bell Pepper", "Prickly Pear",
    "Loquat", "Feijoa", "Sugar Apple"
}

ShopGroupBox:AddDropdown("SelectedSeed", {
    Text = "เลือกเมล็ดที่จะซื้อ",
    Tooltip = "เลือกเมล็ดพืชเพื่อซื้ออัตโนมัติ",
    Default = "Carrot",
    Values = allSeedsList,
    Callback = function(Value)
    end,
})

ShopGroupBox:AddToggle("AutoBuySelectedSeed", {
    Text = "ออโต้ซื้อเมล็ดที่เลือก",
    Tooltip = "ซื้อเมล็ดที่เลือกโดยอัตโนมัติด้วยความเร็วสูงสุด เสี่ยงต่อการตรวจจับสูงมาก!",
    Default = false,
    Callback = function(Value)
        if Value then
            autoBuySelectedSeedCoroutine = task.spawn(function()
                local ReplicatedStorage = game:GetService("ReplicatedStorage")
                local BuySeedStockEvent = ReplicatedStorage:WaitForChild("GameEvents", 10):WaitForChild("BuySeedStock", 10)

                if not BuySeedStockEvent then
                    Toggles.AutoBuySelectedSeed:SetValue(false)
                    return
                end

                while Toggles.AutoBuySelectedSeed.Value do
                    local selectedSeed = Options.SelectedSeed.Value
                    if not selectedSeed then
                        Toggles.AutoBuySelectedSeed:SetValue(false)
                        break
                    end

                    if BuySeedStockEvent and BuySeedStockEvent.Parent then
                        pcall(BuySeedStockEvent.FireServer, BuySeedStockEvent, selectedSeed)
                    else
                        Toggles.AutoBuySelectedSeed:SetValue(false)
                        break
                    end
                    task.wait(0)
                end
            end)

        end
    end,
})

ShopGroupBox:AddToggle("AutoBuyItemA", {
    Text = "ออโต้ซื้อเมล็ดระดับต่ำ",
    Tooltip = "ซื้อ Item A โดยอัตโนมัติด้วยความเร็วสูงสุด เสี่ยงต่อการตรวจจับสูงมาก!",
    Default = false,
    Callback = function(Value)
        if Value then
            autoBuyLowLevelSeedsCoroutine = task.spawn(function()
                local ReplicatedStorage = game:GetService("ReplicatedStorage")
                local BuySeedStockEvent = ReplicatedStorage:WaitForChild("GameEvents", 10):WaitForChild("BuySeedStock", 10)

                if not BuySeedStockEvent then
                    Toggles.AutoBuyItemA:SetValue(false)
                    return
                end

                local seedsToBuy = {
                    "Carrot", "Strawberry", "Blueberry", "Tomato", "Cauliflower",
                    "Watermelon", "Green Apple", "Avocado", "Banana"
                }

                while Toggles.AutoBuyItemA.Value do
                    for _, seedName in ipairs(seedsToBuy) do
                        if not Toggles.AutoBuyItemA.Value then break end

                        if BuySeedStockEvent and BuySeedStockEvent.Parent then
                            pcall(BuySeedStockEvent.FireServer, BuySeedStockEvent, seedName)
                        else
                            Toggles.AutoBuyItemA:SetValue(false)
                            break
                        end
                        task.wait(0)
                    end
                    task.wait(0)
                end
            end)

        end
    end,
})

ShopGroupBox:AddToggle("AutoBuyItemB", {
    Text = "ออโต้ซื้อเมล็ดระดับสูง",
    Tooltip = "ซื้อเมล็ดระดับสูงโดยอัตโนมัติด้วยความเร็วสูงสุด เสี่ยงต่อการตรวจจับสูงมาก!",
    Default = false,
    Callback = function(Value)
        if Value then
            autoBuyHighLevelSeedsCoroutine = task.spawn(function()
                local ReplicatedStorage = game:GetService("ReplicatedStorage")
                local BuySeedStockEvent = ReplicatedStorage:WaitForChild("GameEvents", 10):WaitForChild("BuySeedStock", 10)

                if not BuySeedStockEvent then
                    Toggles.AutoBuyItemB:SetValue(false)
                    return
                end

                local highLevelSeedsToBuy = {
                    "Pineapple", "Kiwi", "Bell Pepper", "Prickly Pear",
                    "Loquat", "Feijoa", "Sugar Apple"
                }

                while Toggles.AutoBuyItemB.Value do
                    for _, seedName in ipairs(highLevelSeedsToBuy) do
                        if not Toggles.AutoBuyItemB.Value then break end

                        if BuySeedStockEvent and BuySeedStockEvent.Parent then
                            pcall(BuySeedStockEvent.FireServer, BuySeedStockEvent, seedName)
                        else
                            Toggles.AutoBuyItemB:SetValue(false)
                            break
                        end
                        task.wait(0)
                    end
                    task.wait(0)
                end
            end)

        end
    end,
})

ShopGroupBox:AddToggle("AutoBuyAllSeeds", {
    Text = "ออโต้ซื้อทุกเมล็ด",
    Tooltip = "ซื้อเมล็ดที่รู้จักทั้งหมดโดยอัตโนมัติด้วยความเร็วสูงสุด เสี่ยงต่อการตรวจจับสูงมาก!",
    Default = false,
    Callback = function(Value)
        if Value then
            autoBuyAllSeedsCoroutine = task.spawn(function()
                local ReplicatedStorage = game:GetService("ReplicatedStorage")
                local BuySeedStockEvent = ReplicatedStorage:WaitForChild("GameEvents", 10):WaitForChild("BuySeedStock", 10)

                if not BuySeedStockEvent then
                    Toggles.AutoBuyAllSeeds:SetValue(false)
                    return
                end

                local allSeedsToBuy = {
                    "Carrot", "Strawberry", "Blueberry", "Tomato", "Cauliflower",
                    "Watermelon", "Green Apple", "Avocado", "Banana",
                    "Pineapple", "Kiwi", "Bell Pepper", "Prickly Pear",
                    "Loquat", "Feijoa", "Sugar Apple"
                }

                while Toggles.AutoBuyAllSeeds.Value do
                    for _, seedName in ipairs(allSeedsToBuy) do
                        if not Toggles.AutoBuyAllSeeds.Value then break end

                        if BuySeedStockEvent and BuySeedStockEvent.Parent then
                            pcall(BuySeedStockEvent.FireServer, BuySeedStockEvent, seedName)
                        else
                            Toggles.AutoBuyAllSeeds:SetValue(false)
                            break
                        end
                        task.wait(0)
                    end
                    task.wait(0)
                end
            end)

        end
    end,
})

---
local allGearList = {
    "Watering Can", "Trowel", "Recall Wrench", "Basic Sprinkler",
    "Advanced Sprinkler", "Godly Sprinkler", "Tanning Mirror",
    "Master Sprinkler", "Cleaning Spray",
    "Favorite Tool",
    "Harvest Tool",
    "Friendship Pot"
}

GearShopGroupBox:AddDropdown("SelectedGear", {
    Text = "เลือกเกียร์ที่จะซื้อ",
    Tooltip = "เลือกเกียร์เพื่อซื้ออัตโนมัติ",
    Default = "Watering Can",
    Values = allGearList,
    Callback = function(Value)
    end,
})

GearShopGroupBox:AddToggle("AutoBuySelectedGear", {
    Text = "ออโต้ซื้อเกียร์ที่เลือก",
    Tooltip = "ซื้อเกียร์ที่เลือกโดยอัตโนมัติด้วยความเร็วสูงสุด เสี่ยงต่อการตรวจจับสูงมาก!",
    Default = false,
    Callback = function(Value)
        if Value then
            autoBuySelectedGearCoroutine = task.spawn(function()
                local ReplicatedStorage = game:GetService("ReplicatedStorage")
                local BuyGearStockEvent = ReplicatedStorage:WaitForChild("GameEvents", 10):WaitForChild("BuyGearStock", 10)

                if not BuyGearStockEvent then
                    Toggles.AutoBuySelectedGear:SetValue(false)
                    return
                end

                while Toggles.AutoBuySelectedGear.Value do
                    local selectedGear = Options.SelectedGear.Value
                    if not selectedGear then
                        Toggles.AutoBuySelectedGear:SetValue(false)
                        break
                    end

                    if BuyGearStockEvent and BuyGearStockEvent.Parent then
                        pcall(BuyGearStockEvent.FireServer, BuyGearStockEvent, selectedGear)
                    else
                        Toggles.AutoBuySelectedGear:SetValue(false)
                        break
                    end
                    task.wait(0)
                end
            end)

        end
    end,
})


GearShopGroupBox:AddToggle("AutoBuyAllGear", {
    Text = "ออโต้ซื้อเกียร์ทั้งหมด",
    Tooltip = "ซื้อเกียร์ที่รู้จักทั้งหมดโดยอัตโนมัติด้วยความเร็วสูงสุด เสี่ยงต่อการตรวจจับสูงมาก!",
    Default = false,
    Callback = function(Value)
        if Value then
            autoBuyAllGearCoroutine = task.spawn(function()
                local ReplicatedStorage = game:GetService("ReplicatedStorage")
                local BuyGearStockEvent = ReplicatedStorage:WaitForChild("GameEvents", 10):WaitForChild("BuyGearStock", 10)

                if not BuyGearStockEvent then
                    Toggles.AutoBuyAllGear:SetValue(false)
                    return
                end

                local allGearToBuy = {
                    "Watering Can", "Trowel", "Recall Wrench", "Basic Sprinkler",
                    "Advanced Sprinkler", "Godly Sprinkler", "Tanning Mirror",
                    "Master Sprinkler", "Cleaning Spray",
                    "Favorite Tool",
                    "Harvest Tool",
                    "Friendship Pot"
                }

                while Toggles.AutoBuyAllGear.Value do
                    for _, gearName in ipairs(allGearToBuy) do
                        if not Toggles.AutoBuyAllGear.Value then break end

                        if BuyGearStockEvent and BuyGearStockEvent.Parent then
                            pcall(BuyGearStockEvent.FireServer, BuyGearStockEvent, gearName)
                        else
                            Toggles.AutoBuyAllGear:SetValue(false)
                            break
                        end
                        task.wait(0)
                    end
                    task.wait(0)
                end
            end)

        end
    end,
})

---
local allEggsInGameList = {}
local u3_DataService = nil
local PetEggData_Module = nil

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local successModuleLoad, errModuleLoad = pcall(function()
    u3_DataService = require(ReplicatedStorage.Modules.DataService)
    PetEggData_Module = require(ReplicatedStorage.Data.PetEggData)
end)

if not successModuleLoad then
    warn("Failed to load DataService or PetEggData Modules:", errModuleLoad)
    allEggsInGameList = {
        "Common Egg", "Common Summer Egg", "Uncommon Egg", "Rare Egg",
        "Rare Summer Egg", "Legendary Egg", "Mythical Egg", "Bug Egg"
    }
else
    for eggName, eggInfo in pairs(PetEggData_Module) do
        if typeof(eggName) == "string" and typeof(eggInfo) == "table" and eggInfo.EggName then
            table.insert(allEggsInGameList, eggInfo.EggName)
        end
    end
    table.sort(allEggsInGameList)
end

local eggCurrentShopSlots = {}

local function updateEggShopContent()
    if not u3_DataService then
        return
    end

    local data = u3_DataService:GetData()
    if data and data.PetEggStock and data.PetEggStock.Stocks then
        for k in pairs(eggCurrentShopSlots) do
            eggCurrentShopSlots[k] = nil
        end

        for slotId, stockInfo in pairs(data.PetEggStock.Stocks) do
            eggCurrentShopSlots[slotId] = {
                EggName = stockInfo.EggName,
                SlotId = slotId
            }
        end
    end
end

if u3_DataService then
    local petEggStockSignal = u3_DataService:GetPathSignal("PetEggStock")
    if petEggStockSignal then
        petEggStockSignal:Connect(updateEggShopContent)
    end
    local petEggStockAllSignal = u3_DataService:GetPathSignal("PetEggStock/@")
    if petEggStockAllSignal then
        petEggStockAllSignal:Connect(updateEggShopContent)
    end

    updateEggShopContent()
end


EggShopGroupBox:AddDropdown("SelectedEggTypeToBuy", {
    Text = "เลือกชนิดไข่ที่จะซื้อ",
    Tooltip = "เลือกประเภทไข่ที่ต้องการให้สคริปต์ซื้อเมื่อเจอ",
    Default = allEggsInGameList[1] or "Common Egg",
    Values = allEggsInGameList,
    Callback = function(Value)
    end,
})

EggShopGroupBox:AddToggle("AutoBuySpecificEggType", {
    Text = "ออโต้ซื้อไข่ชนิดที่เลือก",
    Tooltip = "ซื้อไข่ชนิดที่เลือกโดยอัตโนมัติเมื่อปรากฏในสล็อตใดๆ เสี่ยงต่อการตรวจจับสูงมาก!",
    Default = false,
    Callback = function(Value)
        if Value then
            autoBuySpecificEggTypeCoroutine = task.spawn(function()
                local GameEvents = ReplicatedStorage:WaitForChild("GameEvents", 10)
                local BuyPetEggEvent = GameEvents:WaitForChild("BuyPetEgg", 10)

                if not BuyPetEggEvent then
                    Toggles.AutoBuySpecificEggType:SetValue(false)
                    return
                end

                while Toggles.AutoBuySpecificEggType.Value do
                    local desiredEggType = Options.SelectedEggTypeToBuy.Value

                    for slotId, eggData in pairs(eggCurrentShopSlots) do
                        if eggData.EggName == desiredEggType then
                            if BuyPetEggEvent and BuyPetEggEvent.Parent then
                                pcall(BuyPetEggEvent.FireServer, BuyPetEggEvent, eggData.SlotId)
                            else
                                Toggles.AutoBuySpecificEggType:SetValue(false)
                                break
                            end
                        end
                    end
                    task.wait(0)
                end
            end)

        end
    end,
})

---

EggShopGroupBox:AddToggle("AutoBuyAllEggsInShop", {
    Text = "ออโต้ซื้อไข่ทั้งหมดในร้านค้า",
    Tooltip = "ซื้อไข่ทุกชนิดที่ปรากฏในสล็อตของร้านค้าโดยอัตโนมัติ (สล็อต 1, 2, 3) เสี่ยงสูง!",
    Default = false,
    Callback = function(Value)
        if Value then
            autoBuyAllEggsInShopCoroutine = task.spawn(function()
                local GameEvents = ReplicatedStorage:WaitForChild("GameEvents", 10)
                local BuyPetEggEvent = GameEvents:WaitForChild("BuyPetEgg", 10)

                if not BuyPetEggEvent then
                    Toggles.AutoBuyAllEggsInShop:SetValue(false)
                    return
                end

                while Toggles.AutoBuyAllEggsInShop.Value do
                    for slotId = 1, 3 do
                        local eggData = eggCurrentShopSlots[slotId]
                        if eggData and eggData.EggName ~= "Unknown" then
                            if BuyPetEggEvent and BuyPetEggEvent.Parent then
                                pcall(BuyPetEggEvent.FireServer, BuyPetEggEvent, eggData.SlotId)
                            else
                                Toggles.AutoBuyAllEggsInShop:SetValue(false)
                                break
                            end
                        end
                    end
                    task.wait(0)
                end
            end)

        end
    end,
})

---
local MenuGroup = Tabs["UI Settings"]:AddLeftGroupbox("Menu", "wrench")

MenuGroup:AddToggle("KeybindMenuOpen", {
    Default = Library.KeybindFrame.Visible,
    Text = "เปิดเมนู Keybind",
    Callback = function(value)
        Library.KeybindFrame.Visible = value
    end,
})
MenuGroup:AddToggle("ShowCustomCursor", {
    Text = "เมาส์กำหนดเอง",
    Default = true,
    Callback = function(Value)
        Library.ShowCustomCursor = Value
    end,
})
MenuGroup:AddDivider()
MenuGroup:AddLabel("ปุ่มเปิด/ปิดเมนู")
    :AddKeyPicker("MenuKeybind", { Default = "RightShift", NoUI = true, Text = "ปุ่มเปิด/ปิดเมนู" })

Library.ToggleKeybind = Options.MenuKeybind

ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({ "MenuKeybind" })
ThemeManager:SetFolder("MyScriptHub")
SaveManager:SetFolder("MyScriptHub/specific-game")
SaveManager:SetSubFolder("specific-place")

SaveManager:BuildConfigSection(Tabs["UI Settings"])
ThemeManager:ApplyToTab(Tabs["UI Settings"])

SaveManager:LoadAutoloadConfig()


---
local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local toggleGui = Instance.new("ScreenGui")
toggleGui.Name = "ToggleUIBtnGui"
toggleGui.ResetOnSpawn = false
toggleGui.Parent = playerGui

local toggleButton = Instance.new("ImageButton")
toggleButton.Name = "ToggleButton"
toggleButton.Parent = toggleGui
toggleButton.Size = UDim2.new(0, 50, 0, 50)
toggleButton.Position = UDim2.new(0.95, -50, 0.05, 0)
toggleButton.BackgroundTransparency = 1
toggleButton.Image = "rbxassetid://131071604680337"
toggleButton.ImageTransparency = 0
toggleButton.ZIndex = 10

local uiCorner = Instance.new("UICorner")
uiCorner.Parent = toggleButton
uiCorner.CornerRadius = UDim.new(0, 8)

toggleButton.MouseButton1Click:Connect(function()
    Window:Toggle()
end)

Window:OnVisibilityChanged(function(isVisible)
    toggleButton.Visible = not isVisible
end)

toggleButton.Visible = not Window.Visible
